package CSS.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class CSS_Ruleset_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.selectors$GOrZ)) {
      tgs.appendNode(item);
    }
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.block$GOB8));
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink selectors$GOrZ = MetaAdapterFactory.getContainmentLink(0xb38e874f4c8f43a4L, 0x92d8990b98e3c7abL, 0x19f6196be6f9735dL, 0x19f6196be6f9736aL, "selectors");
    /*package*/ static final SContainmentLink block$GOB8 = MetaAdapterFactory.getContainmentLink(0xb38e874f4c8f43a4L, 0x92d8990b98e3c7abL, 0x19f6196be6f9735dL, 0x19f6196be6f9736cL, "block");
  }
}
